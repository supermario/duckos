#!/bin/bash

# set -x

platform='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
  platform='linux'
elif [[ "$unamestr" == 'Darwin' ]]; then
  platform='osx'
fi

# We need at least one argument
if [ $# -lt 1 ]
  then $0 "help"
  exit 1
fi

duckos_filename="duckos-rpi-0.2.img.gz"
duckos_latest="http://releases.duckos.io/$duckos_filename"

duck_tmp="$HOME/.duck"
[[ -d $duck_tmp ]] || mkdir $duck_tmp
duckos_img=$duck_tmp/$duckos_filename

# Default DuckOS auth private (public) key
# @SECURITY once we have a reasonable persistence model this key
# will be replaced by the user's own on first connect
duckauth_priv_tmp=/tmp/duckauth.priv
echo "-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAy0e8EmWwxGWFhmjdgbzQs9jLqIpaQa07A4QpsIC+hIO5EhVL
qbcRa5mRveioG6h76hkUbZRrQ+Ptl55/0QYqAw9LjOoB9L8jkLLKDIr4Rv8CI8nX
p0S0gzAgOoxPNVM+F2V/c4eyNxYQ5QQN40LeiTcG8rjzi2EMCcIwflImpkuYpXt/
LGyzt8LC0HsSQuPCJp3iY1aX84eT93833cUm7X/hP4WFHjn6pVO2H6mgPKPDSvU0
NbvggDo9UV4jW3VqRPiwfG1MhFe705jzsDzlJhW8Z2tI7MRjRMxboshTUs2mqN/w
/ku3hhmbfEQ9IQALzOYX8hN4D/j+wnjKmlut/QIDAQABAoIBAAuwx28jbAQPdpth
QoPokPQW3reFpWUrij5Mhn1BGjPSw3z3vo83GQhgH5KVY72bdezjnloi8/xGim5y
zhT+TsI4SfcDqjMiHvB+Z8JK57ZligD25bEX8W2uAdx8Hz4I2IRN8QN65VPnr/cL
waS1PskTYhHpcxAr955EDbfmD5T2n5y+w6tEiackkREvdo7gXhvtvfN5HajzgCIg
6l+P4LKU3CnAR7nIsKLLOQKTuqODGNhvnU8sFD/wkYCao9I3kp5ipqsePv9wfz47
fuy9SmR2W6sCNbJM2FiuSnXwFKF1zMwQLfyStV/KAkN2saDZeQwYCdECbwCUeyAJ
zIXXhWECgYEA/w1ZQdMRy3y6AGrzS5GE3toO7aWOHQXQoga7QYzpq6OouUzha3n+
edpTT6YqMsQ6Rxt4CT5qEFoZ/tsaec9CyFSPqiXrEQHq/IqGp6RX6Jh8QaQ+CZS+
yUvZsYibj3em3m+45zMHKdLIoeFBKuK1H0ErycnEozfwolKoI0lHsIUCgYEAzAkh
madQ7YzdrqXiib5H7lmtdh6AENQ7l4+QpYYGDSejNnEVKKXm+pz1ro3TBo0leGne
/lsA44FtGi38Lc1xz8omy/Cy22ujG1a929KNoRQI/92bXrB89yBeG7iZ8iR6g1vu
LwhIbb45z1NbS99l5XGA/BqSEuyUkr1R3z3I/RkCgYEAz7mPeIzvcUukMbLpdCKQ
lPAEOIkdtYWG5m+VE04xAhnI0SJMdbxmBdhLAhPTSoWG8WLt4Jl0yNyZT3gjmBG1
0nMMjwdS7Acj24r3IJI5BrcqfEvIOwVqXYfpRS59g9tvjLpxXduxed6yiSVsbgE2
gr4Ra8do34Yv9gRb7GFCggECgYEAk37GW10ok5ERb/9bFFgJh7QsQQcrbP7/VUDj
P8Ty+u98fQ6iTRAhOWnd8KF1u3atb66ZFSaULeKSDCrR8gpiC+QGx8bohNX6wvih
pxc+awMgvlZkyr6ql7s+TKvWHcVhCzSZqkZClZK+F7IafW6xKnwy0gwjLKr5fFp/
pPH1KYECgYBdvfLfwcweSp2gNh4xHx2kRlnnBYglu5lqGFUUXSwl0OlqnXeiKu/q
CknOTFrij04va7CLDfFhMZ0opmNtTehKmSoWtUv7FOnxWkTf+nKRiwGcW6YygfY7
BNGWhmg/yH0PMz5gAgG1IG9TwpdlQ/U2TsQsTLh1w0IZ/WCRw6iR6g==
-----END RSA PRIVATE KEY-----
" > $duckauth_priv_tmp
chmod go-rwx $duckauth_priv_tmp

confirm() {
  # call with a prompt string or use a default
  read -r -p "${1:-Are you sure?} [y/N] " response
  case $response in
    [yY][eE][sS]|[yY])
      true
      ;;
    *)
      false
      ;;
  esac
}

answer() {
  read -r -p "$1" response
  case $response in
    "")
      echo $2
      ;;
    *)
      echo $response
      ;;
  esac
}

case "$1" in
  write)
    # Ensure we have a copy of duckos
    if [[ -f $duckos_img ]]
      then echo "---> Using $duckos_img"
      else echo "---> Downloading latest DuckOS..."
        curl $duckos_latest -o $duckos_img
    fi

    # Check for platform and list all devices
    if [[ $platform == 'osx' ]]; then
      echo -e "\nDisk devices available:"
      echo "-----------------------"
      diskutil list
      echo ""
    fi

    read -r -p "Select disk device (all data will be lost!): " disk_device

    # ensure our device is unmounted
    for filesystem in `ls -1 $disk_device?*`; do
        sudo -p "Sudo password: " umount -f $filesystem 2>/dev/null
    done

    sudo -p "Sudo password: " umount -f $disk_device 2>/dev/null

    echo "---> Getting bar utility..."
    bar_source="https://raw.githubusercontent.com/yellowducklabs/duckos/master/bar"
    curl $bar_source -o /tmp/bar 2>/dev/null
    chmod +x /tmp/bar

    echo "---> Writing DuckOS to $disk_device..."

    # write disk image to device
    /tmp/bar -c 'gunzip -c' $duckos_img | sudo dd of=$disk_device 2>/dev/null

    echo "---> DuckOS install complete!"

    ;;

  find*)
    if [ $1 != "find-quiet" ]; then
      verbose=1
    fi

    [[ $verbose ]] && echo "---> Seeking ducks, please be patient..."
    findflag=0
    # Default quacker port
    quacker_port=10002

    # Linux requires the -b flag for broadcast pings
    opts=""; [[ $platform == 'linux' ]] && opts="-b"

    # Get a broadcast range
    broadcast_range=$(ping $opts -c2 255.255.255.255 | grep "64 bytes" | cut -d' ' -f4 | sort | uniq | cut -d':' -f1)
    for ip in $broadcast_range;
    do
      # Get curl response
      response=$(curl -m1 --connect-timeout 2 $ip:$quacker_port 2>&1)
      response_code=$?
      case $response_code in
        56|52)
            findflag=1
            [[ $verbose ]] && prefix="Quack! DuckOS detected on IP: "
            echo $prefix$ip
        ;;
      esac
    done
    if [ $findflag == 0 ]; then
      [[ $verbose ]] && echo "No DuckOS hosts found"
    fi
    ;;

  deploy)
    echo "---> Looking for ducks..."
    ip=$(duck find-quiet | head -n1)
    if [[ $ip == "" ]]; then
      echo "---> No DuckOS hosts found"
      echo ""
      echo "Oops! Maybe double check:"
      echo "  - Your Pi is plugged into a network"
      echo "  - You've given it some time to boot"
    fi
    ip=$(answer "Please enter the device IP (hit enter to use $ip): " $ip)
    branch=`git rev-parse --abbrev-ref HEAD 2>/dev/null`
    if [[ $? == 0 ]]; then
      if [[ $branch == "master" ]]; then

        echo "---> Deploying master branch to $ip..."

        GIT_SSH=`which duck` git push duck@$ip:app master
      else
        echo "---> Cannot deploy branch '$branch', please switch to master."
      fi
    else
      echo "---> No code repository found!"
      if confirm "Would you like to deploy the full contents of the current folder instead?"; then
        echo "---> Compressing current folder..."
        tar czvf /tmp/duck_deploy.gz .
        echo "---> Deploying to $ip...";
        cat /tmp/duck_deploy.gz | /usr/bin/ssh -i $duckauth_priv_tmp duck@$ip receive-gzip app
      fi
    fi
    ;;

  help)
    cat<<EOF
    write           Writes DuckOS onto a present SD Card / USB Drive
    deploy          Deploys current branch (git) or current folder to the first found device
    find            Searches for DuckOS hosts on the current network
    help            Prints this list of commands
EOF
    ;;

  *)
    case "$2" in
      git-receive-pack*)
        # Set the correct permissions
        chmod go-rw $duckauth_priv_tmp
        # Route the request through ssh with DuckOS default identity
        /usr/bin/ssh -i $duckauth_priv_tmp $@
        ;;
      esac
    ;;

esac

