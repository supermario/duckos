#!/usr/bin/env bash

# if [[ $(id -un) != "root" ]]; then
#   sudo -u root -H $0 "$@"
#   exit
# fi

# We need at least one argument
if [ $# -lt 1 ]
  then $0 "help"
  exit 1
fi

duck_tmp="$HOME/.duck"
[[ -d $duck_tmp ]] || mkdir $duck_tmp
duckos_latest="http://localhost/duckos/duckos-rpi.img.gz"
duckos_img=$duck_tmp/duckos-rpi.img.gz

case "$1" in
  build)
    # Ensure we have a copy of duckos
    if [[ -f $duckos_img ]]
      then echo "---> Using $duckos_img"
      else echo "---> Downloading latest DuckOS..."
        curl $duckos_latest -o $duckos_img
    fi

    # read -r -p "Select disk device (data will be destroyed): " disk_device
    disk_device=/dev/disk2

    sudo diskutil unmountDisk $disk_device

    # ensure our device is unmounted
    # for disk in `ls -1 $disk_device*` ; do
    #   echo "unmounting $disk"
    #   sudo diskutil unmount $disk
    # done

    echo "---> Writing DuckOS to $disk_device..."

    # write disk image to device
    gunzip -c $duckos_img | sudo dd of=$disk_device
    # (gunzip -c $duckos_img | sudo dd of=$disk_device &)

    # sleep 1;

    # pid=`pgrep -l dd | grep '\sdd$' | cut -d' ' -f1`

    # echo $pid;


    # # If this script is killed, kill the 'dd'.
    # trap "kill $pid 2> /dev/null" EXIT

    # echo "pid is $pid"

    # # # While copy is running...
    # while kill -0 $pid 2> /dev/null; do
    #   echo "---> Writing DuckOS to $disk_device..."
    # #   # kill -USR1 $pid
    #   sleep 1
    # done

    # # # # Disable the trap on a normal exit.
    # trap - EXIT

    # Configure root password (duckos):
    # @TODO

    # sudo diskutil mountDisk $disk_device

    echo "===> DuckOS install complete!"

    ;;

  help)
    cat<<EOF
    build           Build DuckOS onto a mounted SD Card / USB Drive
    help            Print the list of commands
EOF
    ;;

  *)
    for script in $(ls -d /var/lib/dokku/plugins/*/commands); do
      $script "$@"
    done
    ;;

esac



# ---> Searching for DuckOS hosts...
# 10.0.1.15 (raspberrypi)


# $ echo 'Hello world!' > app.js
# $ git init; git add app.js
# $ git commit -m "First release"
# $ git push duck@10.0.1.15 master
# ---> Node.js app detected...
# ===> Application deployed
#      http://10.0.1.15
